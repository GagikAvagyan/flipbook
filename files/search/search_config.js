var textForPages =["FREE GUIDE\u000d\u000aSecurity Matters:\u000d\u000a25+ Tips to Keep Your\u000d\u000aWordPress Secure","2 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aTable of Contents\u000d\u000aIntroduction 4\u000d\u000aI. Protect Your Files and Databases 5\u000d\u000a1. Before Installing WordPress 6\u000d\u000a2. After Installing WordPress 8\u000d\u000a3. Change Permissions for Files and Directories 10\u000d\u000a4. Block PHP in Directories 11\u000d\u000a5. Disable File Editing in WordPress 12\u000d\u000a6. Use a CDN to hide your server address 13\u000d\u000a7. Backup Your Site 14\u000d\u000aII. Secure Your Login and Sessions 15\u000d\u000a8. Activate and Force HTTPS 16\u000d\u000a9. Disable Session Suggestions 17\u000d\u000a10. Change Your Site\u2019s Admin Address 17\u000d\u000a11. Limit Login Attempts 18\u000d\u000a12. Use Firewall Plugins 19\u000d\u000a13. Allow Only Selected IP Addresses to Access the Login Page 20\u000d\u000a14. Use two-factor authentication 21\u000d\u000a15. Use Security Headers 22\u000d\u000a16. Prevent XML-RPC Attacks 24\u000d\u000a17. Disable RSS and ATOM feeds 25\u000d\u000aIII. Maintain a Secure WordPress Installation 27\u000d\u000a18. Choose Reputable Plugins and Themes 28\u000d\u000a19. Delete WordPress Version Information 28","3 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000a20. Hide PHP Warnings and Notices 30\u000d\u000a21. Delete the Readme.html file 30\u000d\u000a22. Hide Apache and PHP Information 31\u000d\u000a23. Keep Your WordPress Updated 32\u000d\u000a24. Perform Regular Security Scans 33\u000d\u000a25. Choose a Trusted Hosting Company 35\u000d\u000a26. Secure Your Webpages with CAPTCHA 35\u000d\u000a27. Bonus Tip: Take Post-hack Actions 36\u000d\u000aConclusion 38\u000d\u000aTable of Contents","4 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aIntroduction\u000d\u000aWondering if WordPress is secure? The answer is yes. WordPress is built with the \u000d\u000alatest security technology and has a regular release schedule that includes up-todate vulnerability patches. It\u2019s also monitored and maintained by a large community \u000d\u000aof developers who care deeply about security.\u000d\u000aIf WordPress is so secure, why did we prepare a guide on preventing hacks? The truth \u000d\u000ais, protecting your site is an ongoing practice. It involves building barriers for attackers, \u000d\u000apreventing failures, tracking changes, denying malicious access, hiding sensitive \u000d\u000ainformation, and more.\u000d\u000aWordPress powers more than 40% of websites and its popularity makes it a target for \u000d\u000acyber-criminals. It\u2019s also a platform in continuous development, open to changes and \u000d\u000aintegrations with third parties.\u000d\u000aAt SiteGround, we are aware of the many ways your site can fall prey to attacks and \u000d\u000awe\u2019re committed to helping site owners protect themselves. Use this guide to increase \u000d\u000ayour knowledge of WordPress web security, implement new measures to secure your \u000d\u000awebsite, and spread the word with those around you about the need to protect their sites.","Protect Your \u000d\u000aFiles and\u000d\u000aDatabases\u000d\u000aI","SECURITY MATTERS: 25+ Tips to Keep 6\u000d\u000aYour WordPress Secure\u000d\u000a1. Before Installing WordPress \u000d\u000aWhen setting up a new WordPress installation, you should always \u000d\u000achoose the latest stable version. Before installing it, follow these \u000d\u000atwo simple web security steps in the wp-config.php file:\u000d\u000a\u25cf Change the database prefix\u000d\u000a\u25cf Use authentication keys\u000d\u000aBy default, all WordPress installations use the prefix wp_ for their database. This is \u000d\u000aconsistent throughout WordPress, so it\u2019s recommended to change the prefix for each \u000d\u000asite to prevent possible attacks related to the database.\u000d\u000aTo alter the WordPress table prefix, change the following line in the configuration file, \u000d\u000awp-config.php, with the prefix that you would like to use: \u000d\u000a$table_prefix = \u2018wp_\u2019;\u000d\u000aFor example:\u000d\u000a$table_prefix = \u2018newsite_wp_\u2019;\u000d\u000aThis change will also allow you to have several WordPress installations on the same \u000d\u000adatabase, as long as you do not repeat the prefix.\u000d\u000aWordPress security is of utmost importance at SiteGround. That is why when you \u000d\u000ainstall a new WordPress site with the App Installer in Site Tools, the new website\u2019s \u000d\u000adatabase has a random prefix different from the default \u201cwp_\u201d one. Thus, you don\u2019t \u000d\u000ahave to change the prefix yourself.\u000d\u000aIf your site is already installed and you didn\u2019t change the default prefix during the \u000d\u000ainstallation process, it\u2019s not too late. Use a plugin such as Change Table Prefix to make \u000d\u000amodifications. You can also do this manually, but I don\u2019t recommend it if you are not \u000d\u000afamiliar with performing database changes.\u000d\u000aWordPress has secret keys, called Keys and Salt, that are stored in the wp-config.php \u000d\u000afile. They protect open sessions by encrypting the session data in the browser\u2019s cookie. \u000d\u000aBefore beginning the installation, you should generate the secret keys.","7 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aLike with the database prefix, you can change the secret keys on an existing site, at \u000d\u000aany time, a task that I recommend you perform routinely in order to invalidate active \u000d\u000asessions and force all users to log in again.\u000d\u000aAlthough you can generate your own keys manually, I recommend using the official \u000d\u000aWordPress service found at api.wordpress.org/secret-key/1.1/salt and replace the \u000d\u000akeys in your wp-config.php file with them.\u000d\u000aBefore moving on to the next tip, I have one more piece of advice about WordPress \u000d\u000asecret keys for live sites. In the unlikely scenario where you need to deny any type of \u000d\u000aaccess to the admin panel, even with login credentials, you can configure keys to invalidate every microsecond by replacing them in the wp-config.php with the following:\u000d\u000adefine(\u2018AUTH_KEY\u2019, microtime()); \u000d\u000adefine(\u2018\u2019SECURE_AUTH_KEY\u2019, microtime()); \u000d\u000adefine(\u2018LOGGED_IN_KEY\u2019, microtime()); \u000d\u000adefine(\u2018NONCE_KEY\u2019, microtime()); \u000d\u000adefine(\u2018AUTH_SALT\u2019, microtime()); \u000d\u000adefine(\u2018SECURE_AUTH_SALT\u2019, microtime()); \u000d\u000adefine(\u2018LOGGED_IN_SALT\u2019, microtime()); \u000d\u000adefine(\u2018NONCE_SALT\u2019, microtime());\u000d\u000aRemember to routinely update these keys as a preventative measure or to end active \u000d\u000asessions.","SECURITY MATTERS: 25+ Tips to Keep 8 Your WordPress Secure\u000d\u000a2. After Installing WordPress \u000d\u000aOnce you\u2019ve finished installing your new WordPress site, you\u2019ll need \u000d\u000ato undertake different actions to protect your recently installed \u000d\u000awebsite.\u000d\u000aOne of the first things you should do to secure your new WordPress \u000d\u000asite is to delete the admin profile used during installation and create a new user with \u000d\u000aadmin permissions, as well as any other necessary user accounts.\u000d\u000aAvoid weak usernames like admin or administrator which are common in all WordPress \u000d\u000ainstallations and remember to use a strong password.\u000d\u000aDisable the pingbacks and trackbacks notifications on your admin panel (Settings > \u000d\u000aComments), as they can be an entry for possible DDoS (Distributed Denial of Service) \u000d\u000aattacks on your site.\u000d\u000aProtect files from attacks and intrusions by adding the following lines of code in the \u000d\u000a.htaccess file. Ideally, this should be done at the beginning of the file located at the \u000d\u000aroot directory of your site:\u000d\u000a#Deny Directory Listing\u000d\u000aOptions - Indexes\u000d\u000a#Block sensitive files\u000d\u000a<files .htaccess>\u000d\u000aOrder allow,deny\u000d\u000aDeny from all\u000d\u000a</files>\u000d\u000a<files wp-config.php>\u000d\u000aOrder allow,deny\u000d\u000aDeny from all\u000d\u000a</files>","SECURITY MATTERS: 25+ Tips to Keep 9\u000d\u000aYour WordPress Secure\u000d\u000aYou should block access to any unnecessary files by creating a new .htaccess file in \u000d\u000athe /wp-admin directory and adding the following lines of code:\u000d\u000a#Block installation files\u000d\u000a<files install.php>\u000d\u000aOrder allow,deny\u000d\u000aDeny from all\u000d\u000a</files>\u000d\u000a<files setup-config.php>\u000d\u000aOrder allow,deny\u000d\u000aDeny from all\u000d\u000a</files>\u000d\u000aI recommend reviewing the robots.txt file, which is located in the root directory of your \u000d\u000asite. This file tells search bots what should and shouldn\u2019t be analyzed on your site, so \u000d\u000abe sure to check that it doesn\u2019t show any sensitive information about your WordPress \u000d\u000ainstallation, for example, your wp-admin folder.\u000d\u000aSome of these actions can easily be achieved by using a plugin such as the Security \u000d\u000aOptimizer plugin. It\u2019s a free plugin developed by SiteGround and available to everyone \u000d\u000ato secure WordPress websites with just a few clicks.\u000d\u000aIf you are using that plugin, you can choose an option that disables the creation of \u000d\u000acommon usernames. You need to go to Security Optimizer plugin dashboard > Login \u000d\u000aSecurity > Disable Common Usernames. What is more, if you already have one or more \u000d\u000ausers with a weak username, it\u2019ll ask you to provide new ones: a pop-up window will \u000d\u000aappear where you\u2019ll be able to put in a new username and automatically replace the \u000d\u000aexisting weak ones.","10 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aYou can also go to Security Optimizer plugin dashboard > Site Security > Lock and \u000d\u000aProtect System Folders. By enabling this option, an .htaccess file is placed in your \u000d\u000aWordPress\u2019 system folders, preventing the execution of unauthorized or suspicious \u000d\u000ascripts from being executed from them.\u000d\u000a3. Change Permissions for\u000d\u000aFiles and Directories \u000d\u000aMake sure files and directories in your WordPress installation have \u000d\u000athe appropriate permissions to prevent attackers from taking control \u000d\u000aof your site.\u000d\u000aYou can change the permissions through an FTP client or through \u000d\u000aan admin panel provided by your web host. With SiteGround, it\u2019s \u000d\u000aeasy to change file and folder permissions in your Site Tools area.\u000d\u000aGo to Site Tools > WordPress > Install & Manage. Choose the preferred installation \u000d\u000aand go to the kebab menu > Reset Permissions.\u000d\u000aPro Tip: For more tips on WordPress user roles and permissions, check the blog post \u000d\u000aabout The Principle of Least Privilege on the SiteGround blog.","11 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000a4. Block PHP in Directories \u000d\u000aAlthough WordPress installations block PHP file uploads through \u000d\u000athe admin panel by default, you should block the option to execute \u000d\u000aPHP code in the \u201cwp-content\u201d folder. You should also limit the unnecessary execution of PHP code in other folders used by WordPress \u000d\u000athat shouldn\u2019t be accessed directly.\u000d\u000aCreate a new .htaccess file inside of your folders \u201c/wp-content/uploads\u201d, \u201c/wp-content/plugins\u201d and \u201c/wp-content/themes\u201d, and add the following lines of code to block \u000d\u000aPHP executions:\u000d\u000a<Files *.php>\u000d\u000adeny from all \u000d\u000a</Files>\u000d\u000aNote: Take into account that after every modification in a .htaccess file, you should \u000d\u000acheck its validity. Flush the cache to confirm that the added rules are working properly.\u000d\u000aSiteGround users can take advantage of the SiteGround Site Scanner tool that adds \u000d\u000avarious PHP security features. You can activate them from your website\u2019s Site Tools \u000d\u000a> Security > Site Scanner > Site Protect. On this page, turn on the button for Disable \u000d\u000aPHP upload. With this option enabled, your website disallows any file uploads via PHP.","12 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000a\u0410nother potential threat for your website is PHP files containing scripts that execute \u000d\u000acommands on a server level. Such scripts can be used to upload malicious files or \u000d\u000aoverload the entire server.\u000d\u000aIn Site Tools > Security > Site Scanner >Site Protect, turn on the option Disable execution of shell commands via PHP to prevent such PHP files from executing.\u000d\u000a5. Disable File Editing\u000d\u000ain WordPress\u000d\u000aThis step focuses on adding a layer of security to the admin panel \u000d\u000ato prevent unwanted intruders and limit mistakes made by authorized \u000d\u000ausers.\u000d\u000aTo disable the file edit option in the WordPress admin panel, use the \u000d\u000afollowing line of code in the configuration file, wp-config.php:\u000d\u000adefine( \u2018DISALLOW_FILE_EDIT\u2019, true );\u000d\u000aThis code is equivalent to removing the \u2018edit_themes\u2019, \u2018edit_plugins\u2019, and \u2018edit_files\u2019 \u000d\u000apermissions for any registered user on the site. \u000d\u000aYou can add an additional layer of control for live sites if you don\u2019t want users to install \u000d\u000athemes and plugins on their own. To do this, add the following code to the configuration \u000d\u000afile - wp-config.php:\u000d\u000adefine( \u2018DISALLOW_FILE_MODS\u2019, true );","13 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aRemember to deactivate it by changing the directive to false if you need to perform \u000d\u000atasks on the WordPress installation. Perform all modifications on the wp-config.php \u000d\u000afile above the following line of code:\u000d\u000a/* That\u2019s all, stop editing! Happy blogging. */\u000d\u000aAlternatively, if using the Security Optimizer plugin, the above actions can easily be \u000d\u000aperformed from Security Optimizer plugin dashboard > Site Security > Disable Themes \u000d\u000a& Plugins Editor. This will remove the option to edit your website\u2019s theme and plugins\u2019 \u000d\u000acode from the WordPress admin panel, which will prevent any unauthorized access \u000d\u000avia the WordPress editor.\u000d\u000a6. Use a CDN to hide your\u000d\u000aserver address\u000d\u000aAlthough we already know the benefits of a Content Delivery Network \u000d\u000a(CDN) service to improve your website performance, using a DNS-type \u000d\u000aCDN (before your web server) can improve your web security in the \u000d\u000afollowing ways.\u000d\u000a\u25cf It prevents brute force attacks by using the distributed server network of the \u000d\u000aprovider which minimizes the impact and applies blocking rules to detect these \u000d\u000akinds of attacks, usually DoS or DDoS.\u000d\u000a\u25cf It hides the real IP of your server which prevents direct attacks against your site \u000d\u000aby masking the real IP where you are hosted.\u000d\u000aThere are many available free and premium CDN services to choose from. However, \u000d\u000ahere at SiteGround, we have developed our own custom SiteGround CDN tailor-made \u000d\u000afor our platform. SiteGround clients can easily activate the service and control its \u000d\u000asettings from Site Tools > Speed > CDN","14 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aThe service comes with a free Basic plan and a Premium plan adding more advanced \u000d\u000afeatures. If you are interested, check out this blog post about SiteGround CDN.\u000d\u000a7. Backup Your Site\u000d\u000aAlthough we hope you\u2019ll never have to use this tip, it\u2019s better to be \u000d\u000asafe than sorry and have a full backup of your site. \u000d\u000aYou rarely need to restore a full site backup, but in case you do, \u000d\u000aSiteGround has a tool for backups and easy restores developed \u000d\u000ain-house, independent of the web service infrastructure. You can \u000d\u000arest easy knowing we have copies of your files in case of any incident, and you\u2019ll be \u000d\u000aable to restore your site easily and quickly.\u000d\u000aI recommend you follow the 3-2-1 rule as a strategy for backups that contain important \u000d\u000adata.\u000d\u000a\u25cf Keep 3 backups \u000d\u000a\u25cf In 2 different formats (minimum) \u000d\u000a\u25cf 1 of the backups should be in a different physical location\u000d\u000aIn case disaster strikes, it\u2019s useless to have all your backups in the same format or \u000d\u000alocation. With SiteGround\u2019s shared hosting plans you have 30-day backups, and they \u000d\u000akeep your files in different physical locations than the one where your main website is \u000d\u000alocated. For more information, read the blog post Geographically Distributed Backups \u000d\u000afor Enhanced Data Protection.\u000d\u000aRemember to always generate a new backup after you make any important changes \u000d\u000ato your WordPress installation.","Secure Your \u000d\u000aLogin and\u000d\u000aSessions\u000d\u000aII\u000d\u000aLOGIN\u000d\u000a*******","SECURITY MATTERS: 25+ Tips to Keep 16\u000d\u000aYour WordPress Secure\u000d\u000a8. Activate and Force HTTPS\u000d\u000aThe HTTPS protocol creates a secure connection between users \u000d\u000aand the server, eliminating possible Man-in-the Middle (MITM) \u000d\u000aattacks. These attacks happen when an intermediate service alters \u000d\u000aor acquires information exchanged between two ends. That\u2019s why \u000d\u000awe use HTTPS encryption for all sensitive information.\u000d\u000aTo use the HTTPS protocol on your site, install an SSL certificate on your web server \u000d\u000aand change the URL in the admin panel.\u000d\u000aWith SiteGround, all hosting plans include free Let\u2019s Encrypt SSL certificates that \u000d\u000acan be installed and configured with an easy tool in the control panel under Security \u000d\u000asection > Let\u2019s Encrypt.\u000d\u000aThere are several WordPress plugins that force an HTTPS connection on all your site \u000d\u000aresources, to avoid warnings or errors when serving both HTTP and HTTPS content \u000d\u000aon the same page.\u000d\u000aSiteGround Optimizer is an all-in-one optimization plugin that can force an HTTPS \u000d\u000aconnection with a single click and brings many other improvements to your website. \u000d\u000aTo force HTTPS connection, go to your WordPress dashboard and navigate to SG Optimizer > Environment. Turn ON the button for HTTPS Enforce and from this moment \u000d\u000ayour website will load only via the HTTPS protocol.\u000d\u000aFinally, you should force any new session in the admin panel of your site to be under \u000d\u000aSSL protocol by adding the following code to the wp-config.php:\u000d\u000adefine(\u2018FORCE_SSL_LOGIN\u2019, true);\u000d\u000adefine(\u2018FORCE_SSL_ADMIN\u2019, true);","17 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aNote: Remember that you should have an active SSL in your installation, for example, \u000d\u000athe one provided by Let\u2019s Encrypt.\u000d\u000a9. Disable Session Suggestions\u000d\u000aAs previously mentioned but worth repeating, giving as little information as possible to attackers should be your top priority. This tip \u000d\u000awill help you minimize possible entries to your site by disabling the \u000d\u000alogin suggestions from the login page, which appear by default if \u000d\u000athe username or password is incorrect. \u000d\u000afunction no_wordpress_login_errors(){\u000d\u000areturn \u2018Thanks for trying but there were issues with the login.\u2019;\u000d\u000a}\u000d\u000aadd_filter( \u2018login_errors\u2019, \u2018no_wordpress_login_errors\u2019 );\u000d\u000aNote: You can customize the message.\u000d\u000a10. Change Your Site\u2019s\u000d\u000aAdmin Address\u000d\u000aIt\u2019s no surprise that many website attacks happen on the login page. \u000d\u000aThat\u2019s because bots are programmed to recognize a WordPress \u000d\u000ainstallation and add the path /wp-admin to get to the login page. \u000d\u000aThen, they can easily force entry if the usernames and passwords \u000d\u000aare weak. All WordPress sites use the same path for the login page, \u000d\u000awhich means changing it will add another layer of difficulty for \u000d\u000aattackers.\u000d\u000aFor example, www.mydomain.com/newadminpanel\u000d\u000aThere are several plugins in the WordPress repository that allow you to change the \u000d\u000apath and location of your login page.","SECURITY MATTERS: 25+ Tips to Keep 18 Your WordPress Secure\u000d\u000aI recommend the Security Optimizer plugin. With it, you have the option to change the \u000d\u000aURL to a custom one and avoid attacks by going to Security Optimizer plugin dashboard > Login Security > Custom Login URL. If you have enabled user registration for \u000d\u000ayour website, you can change the default sign-up URL as well.\u000d\u000aHowever, other plugins exist and many security plugins also include this functionality.\u000d\u000a11. Limit Login Attempts\u000d\u000aYou can configure your site to block access to the login page for a \u000d\u000afew minutes, a few hours, or permanently when a user inputs incorrect login credentials a certain number of times. This makes it more \u000d\u000adifficult for bots to gain access through brute force attacks.\u000d\u000aIf you\u2019re using the Security Optimizer plugin, you can simply go to \u000d\u000aSecurity Optimizer plugin dashboard > Login Security > Limit Login Attempts. There \u000d\u000ayou can set a limit to the number of times a given user can attempt to log in to your \u000d\u000awp-admin with incorrect credentials.\u000d\u000aOnce the login attempt limit is reached, the IP from which the attempts have originated \u000d\u000awill be blocked from accessing your login page for 1 hour and will be added to the \u000d\u000aBlocked tab of the Activity Log page. If the attempts continue after the first hour, the \u000d\u000ablock will then be set for 24 hours and after that for 7 days. You can manually remove \u000d\u000athe block at any point on the Activity Log page.","SECURITY MATTERS: 25+ Tips to Keep 19\u000d\u000aYour WordPress Secure\u000d\u000a12. Use Firewall Plugins \u000d\u000aA Firewall is an additional layer of security software that can protect \u000d\u000ayour web connections or your WordPress installation by detecting \u000d\u000aand analyzing incoming connections. Firewall plugins are very effective and easy to manage since everything is configured from a single \u000d\u000aplugin.\u000d\u000aThey normally include a Firewall WAF (Web Application Firewall), a tool that analyzes \u000d\u000aand blocks attacks on the website in real time.\u000d\u000aAt SiteGround, customers have this service by default. It analyzes the types of connections and blocks any attack attempts in a completely transparent way. This advanced \u000d\u000asecurity measure is implemented in a seamless and transparent manner, giving \u000d\u000aSiteGround clients peace of mind in the face of possible threats or malicious attacks. \u000d\u000aHowever, if you\u2019re not a SiteGround client, you can use a firewall plugin such as:\u000d\u000a\u25cf Wordfence Security (be careful with the Live Traffic functionality, which may \u000d\u000aleave you without service due to server overload) \u000d\u000a\u25cf All-In-One Security (AIOS) \u2013 Security and Firewall\u000d\u000aSome firewall plugins also include these functionalities:\u000d\u000a\u25cf File scanner to search for changes, errors, and viruses \u000d\u000a\u25cf Firewall WAF that detects and blocks malicious visits \u000d\u000a\u25cf Real-time traffic viewer ","20 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000a\u25cf A tool to block access to the website by IP \u000d\u000a\u25cf Captcha for the WordPress login page and a limit login attempts feature \u000d\u000a\u25cf Password audit\u000d\u000a\u25cf Two-Factor Authentication to access the WordPress admin panel \u000d\u000a\u25cf Ability to block specific countries \u000d\u000a\u25cf A tool to check folder and file permissions\u000d\u000a13. Allow Only Selected IP \u000d\u000aAddresses to Access the Login \u000d\u000aPage \u000d\u000aTo make sure that no one else can access your website\u2019s administrative panel, you can allow only the IP addresses of trusted users. \u000d\u000aThis way, unauthorized visitors who somehow obtained valid login \u000d\u000acredentials will not be able to access your website.\u000d\u000aThere are two ways to limit the IP addresses - manually restricting \u000d\u000aaccess to the wp-admin folder with an .htaccess file or using a security plugin. \u000d\u000aTo allow only trusted IP addresses manually, open your website\u2019s wp-admin folder and \u000d\u000aedit the .htaccess file inside. If the file is non-existent, create a new .htaccess file. Add \u000d\u000athe following rules to the file: \u000d\u000aorder deny, allow\u000d\u000adeny from all\u000d\u000aallow from 111.222.255.255\u000d\u000aReplace the address 111.222.255.255 with the IP you want to whitelist. You can add \u000d\u000aas many IP addresses as you wish by adding a new \u201callow from\u201d line for each IP.","21 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aTo make things easier, you can use the plugin Security Optimizer to whitelist IP \u000d\u000aaddresses. From your dashboard, go to Security Optimizer > Login Security > \u000d\u000aLogin Access. Click on the button Configure which will open a new pop-up window.\u000d\u000aAdd your IP in the field under Manage Login Access. To add another IP, click on the \u000d\u000a+ sign which adds a new field. Once you\u2019ve added all IP addresses, click on Confirm.\u000d\u000a14. Use two-factor authentication \u000d\u000aAnother feature that will secure your website even further is two-factor \u000d\u000aauthentication. When activated, users will have to provide a valid \u000d\u000acode from their phone\u2019s authenticator app along with the standard \u000d\u000alogin credentials. \u000d\u000aYou can easily configure two-factor authentication using the plugin \u000d\u000aSecurity Optimizer. Inside your website\u2019s dashboard, go to SG Security > Login Security\u000d\u000aand enable Two-factor Authentication for Admin & Editors Users. ","22 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000a15. Use Security Headers \u000d\u000aImprove your website security by implementing a series of headers \u000d\u000aincorporated into the web server and sent to the browser.\u000d\u000aStart with the X-Frame-Options header, which prevents pages from \u000d\u000abeing opened in an external frame or iframe. This prevents clickjacking attacks on your website: a technique that tricks internet users into revealing \u000d\u000aconfidential information on a seemingly normal website. \u000d\u000aBy adding the following line of code to your .htaccess file, you tell the browser that \u000d\u000aframes can only be opened from the same domain or origin:\u000d\u000aHeader set X-Frame-Options SAMEORIGIN\u000d\u000aIf your website includes services that can be embedded by third parties, you can specify \u000d\u000awhich domains are allowed and deny access to the rest. For example:\u000d\u000aHeader set X-Frame-Options \u201cALLOW-FROM https://example.com/\u201d\u000d\u000aIncrease your site\u2019s protection against XSS (cross-site scripting) attacks on older \u000d\u000abrowsers by adding the following line of code to your .htaccess file:\u000d\u000aHeader set X-XSS-Protection \u201c1; mode=block\u201d\u000d\u000aTo reduce the risk of XSS, build on the following tip by using the contentsecurity-policy \u000d\u000aheader or browser content security policy, which specifies what content from your site \u000d\u000aor third parties is allowed to dynamically load. \u000d\u000aFor example, if you want your site to only accept content from the same domain, add \u000d\u000athe following line of code to your .htaccess file:\u000d\u000aHeader set Content-Security-Policy \u201cdefault-src \u2018self\u2019;\u201d\u000d\u000aThis blocks scripts from loading from external sources.","23 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aTo modify the variables for your specific project, for example, to allow scripts from \u000d\u000athird parties like Google Analytics, use this line of code:\u000d\u000aHeader set Content-Security-Policy \u201cscript-src \u2018self\u2019 www.google-analytics.com;\u201d \u000d\u000aThis header should be carefully implemented because it\u2019s easy to block resources \u000d\u000awithout notice. I recommend performing different tests with this header in a separate \u000d\u000abrowser tab to check for errors on the terminal.\u000d\u000aNote: if you previously included the x-content-security-policy header in your server and \u000d\u000ait\u2019s outdated, you\u2019ll need to delete it as it might cause issues if you use both headers \u000d\u000aat the same time.\u000d\u000aIf you have the Security Optimizer plugin, you can also use the Advanced XSS protection \u000d\u000aoption. You just need to go to Security Optimizer plugin dashboard > Site Security > \u000d\u000aAdvanced XSS protection.\u000d\u000aThis feature will protect your website against cross-site scripting attacks by automatically inserting additional lines inside your website\u2019s .htaccess file.\u000d\u000aThe fourth header you can use to boost your security is the X-content-type-options, \u000d\u000awhich protects you from unwanted styles and scripts to load when the expected MIME \u000d\u000atypes do not match what was declared on the page. To add this protection, add this \u000d\u000aline to your .htaccess file:\u000d\u000aHeader set X-Content-Type-Options \u201cnosniff\u201d\u000d\u000aAnother header you can use to secure your website better is the HSTS (HTTP \u000d\u000aStrict-Transport-Security) response header. It allows the website to tell browsers \u000d\u000athat it should only be accessed using HTTPS, instead of using HTTP.","24 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aIf a website accepts a connection through HTTP and redirects to HTTPS, visitors \u000d\u000amay initially communicate with the non-encrypted version of the site before being \u000d\u000aredirected. This creates an opportunity for a \u201cman-in-the-middle\u201d attack. The redirect \u000d\u000acould be exploited and regular visitors to be redirected to a malicious site instead of \u000d\u000athe secure version of the origin.\u000d\u000aYou can include a HSTS header by adding the following line to your website\u2019s .htaccess file: \u000d\u000a<IfModule mod_headers.c>\u000d\u000aHeader always set Strict-Transport-Security \u2018max-age=31536000\u2019\u000d\u000a</IfModule>\u000d\u000a16. Prevent XML-RPC Attacks \u000d\u000aThe xmlrpc.php file is used by some applications and software to \u000d\u000acommunicate with WordPress, for example, the WordPress app or \u000d\u000amail clients like Outlook and Thunderbird that allow the feature \u000d\u000a\u201cpublish by email\u201d. Plugins like Jetpack or the Json Api use the \u000d\u000aXMLRPC file for some of their functions.\u000d\u000aUnless you specifically need to use it, it is recommended that XML-RPC is always disabled, because it can be used in several exploits. If you\u2019re using the Security Optimizer \u000d\u000aplugin, you can simply go to Security Optimizer plugin dashboard > Site Security > \u000d\u000aDisable XML-RPC.\u000d\u000aYou can also completely deny access to the xmlrpc.php file by using rules in the .htaccess file or by deleting it if you are sure that you don\u2019t need it. To deny access via \u000d\u000a.htaccess, add the following lines of code to the file:","25 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000a# deny access to xmlrpc.php\u000d\u000a<Files xmlrpc.php>\u000d\u000aOrder Deny,Allow\u000d\u000aDeny from all\u000d\u000a</Files>\u000d\u000aFor those who absolutely need this API functionality, the best solution is to enable it \u000d\u000aonly from the IP where you need access and deny the rest. \u000d\u000aIn this specific case, add the following lines of code to the .htaccess file, modifying \u000d\u000athe IP to the one requiring access:\u000d\u000a<Files xmlrpc.php>\u000d\u000aorder deny, allow\u000d\u000adeny from all\u000d\u000aallow from X.X.X.X\u000d\u000a</Files>\u000d\u000a17. Disable RSS and ATOM feeds \u000d\u000aRSS (Really Simple Syndication) is a web feed written in XML. It \u000d\u000aallows websites to publish their content in machine-readable feeds. \u000d\u000aThese feeds can be automatically read by a dedicated software \u000d\u000acalled RSS aggregator. In practice, the RSS aggregator could be \u000d\u000aintegrated into subscribers\u2019 browsers which allows them to stay \u000d\u000aposted on any new publication of your website. Atom Syndication Format is an upgraded \u000d\u000aversion of RSS. It is an XML language used for web feeds that may contain headlines, \u000d\u000aexcerpts, full posts, links, and metadata of published content. These feeds can be \u000d\u000aread by other websites and feed reader software. \u000d\u000aAlthough both feeds have their practical uses, they can also pose a threat to your website \u000d\u000aand its subscribers. Attackers may use Cross-Site Scripting to inject malicious scripts \u000d\u000ainto the feeds, which could infect your subscribers\u2019 browsers and result in the leakage \u000d\u000aof sensitive information stored in the browser\u2019s history and cookies. ","SECURITY MATTERS: 25+ Tips to Keep 26\u000d\u000aYour WordPress Secure\u000d\u000aWordPress integrates both feeds by default, and you may consider disabling them \u000d\u000ato minimize the risk of compromising your website. It can be done by adding code \u000d\u000amanually to your website or using a plugin. \u000d\u000aTo disable the features manually, add the following lines to your active theme\u2019s\u000d\u000afunctions.php file: \u000d\u000afunction disable_feed() {\u000d\u000a wp_die( __( \u2018This site does not have a feed, visit the <a href=\u201d\u2019. esc_url( home_url(\u000d\u000a \u2018/\u2019 ) ) .\u2019\u201d>home page</a>!\u2019 ) );\u000d\u000a}\u000d\u000aadd_action(\u2018do_feed\u2019, \u2018disable_feed\u2019, 1);\u000d\u000aadd_action(\u2018do_feed_rdf\u2019, \u2018disable_feed\u2019, 1);\u000d\u000aadd_action(\u2018do_feed_rss\u2019, \u2018disable_feed\u2019, 1);\u000d\u000aadd_action(\u2018do_feed_rss2\u2019, \u2018disable_feed\u2019, 1);\u000d\u000aadd_action(\u2018do_feed_atom\u2019, \u2018disable_feed\u2019, 1);\u000d\u000aadd_action(\u2018do_feed_rss2_comments\u2019, \u2018disable_feed\u2019, 1);\u000d\u000aadd_action(\u2018do_feed_atom_comments\u2019, \u2018disable_feed\u2019, 1);\u000d\u000aAs a precaution, make sure to back up your website before adding the code. This \u000d\u000away, you can easily restore it in case the code is not inserted correctly and breaks \u000d\u000ayour website.\u000d\u000aA much safer and easier way to disable RSS and Atom feeds is using a plugin. The \u000d\u000aSecurity Optimizer plugin allows you to do that with a single click. Navigate to the SG \u000d\u000aSecurity section in your website\u2019s dashboard > Site Security and turn on the option \u000d\u000aDisable RSS and ATOM Feeds.","Maintain a\u000d\u000aSecure WordPress \u000d\u000aInstallation\u000d\u000aI I I","SECURITY MATTERS: 25+ Tips to Keep 28 Your WordPress Secure\u000d\u000a18. Choose Reputable Plugins\u000d\u000aand Themes \u000d\u000aPlugins and themes are powerful third-party resources that can \u000d\u000ahelp you increase the functionality of your WordPress site. There \u000d\u000aare hundreds of thousands of them available both in the official \u000d\u000aWordPress repository and elsewhere online. Since not all of them \u000d\u000aare vetted, this represents a serious security problem. Most of us \u000d\u000adon\u2019t carry out exhaustive code and functionality reviews before installing a plugin \u000d\u000abut a questionable plugin can cause security breaches and conflicts. \u000d\u000aOnly download plugins and themes from the WordPress repository and reputable sites. \u000d\u000aBefore choosing your next plugin or theme, I recommend you:\u000d\u000a\u25cf Take a look at the reviews, number of downloads, and comments.\u000d\u000a\u25cf Look at the latest update to see if the software is actively maintained.\u000d\u000a\u25cf Research the author and look at any other themes they\u2019ve built in the repository.\u000d\u000a\u25cf Check for compatibility issues with the software and your current installation.\u000d\u000aAlways perform a full website backup before installing a new plugin or theme.\u000d\u000a19. Delete WordPress Version\u000d\u000aInformation \u000d\u000aThis security tip will hide information about your WordPress version \u000d\u000afrom the HTML code on your site. This will prevent attackers from \u000d\u000acapitalizing on any known vulnerabilities associated with a particular \u000d\u000aversion of WordPress.\u000d\u000aYou can delete the information from the HTML header and from the \u000d\u000astatic files by adding the following code to the functions.php file of your theme or in \u000d\u000athe utilities of your plugin:","SECURITY MATTERS: 25+ Tips to Keep 29\u000d\u000aYour WordPress Secure\u000d\u000a/*\u000d\u000aHide scripts and style version\u000d\u000a */\u000d\u000afunction SG_remove_wp_version_strings( $src ) {\u000d\u000aglobal $wp_version;\u000d\u000aparse_str(parse_url($src, PHP_URL_QUERY), $query);\u000d\u000aif ( !empty($query[\u2018ver\u2019]) && $query[\u2018ver\u2019] === $wp_version ) {\u000d\u000a$src = remove_query_arg(\u2018ver\u2019, $src);\u000d\u000a }\u000d\u000areturn $src;\u000d\u000a}\u000d\u000aadd_filter( \u2018script_loader_src\u2019, \u2018SG_remove_wp_version_strings\u2019 );\u000d\u000aadd_filter( \u2018style_loader_src\u2019, \u2018SG_remove_wp_version_strings\u2019 );\u000d\u000a/*\u000d\u000aHide generator tag from the header\u000d\u000a*/\u000d\u000afunction SG_remove_wp_generator() {\u000d\u000areturn \u2018\u2019;\u000d\u000a }\u000d\u000aadd_filter(\u2018the_generator\u2019, \u2018SG_remove_wp_generator\u2019);\u000d\u000aYou can also hide information about the current WordPress version. If you\u2019re using the \u000d\u000aSecurity Optimizer plugin, you can go to Security Optimizer plugin dashboard > Site \u000d\u000aSecurity > Hide WordPress Version. By enabling this option, the information about \u000d\u000ayour WordPress version will be removed from your site\u2019s HTML code automatically.","30 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aNote: Although some WordPress security guides recommend deleting these files \u000d\u000aaltogether, my recommendation is to block their access since a new WordPress update \u000d\u000aor re-installation might generate a new one.\u000d\u000a20. Hide PHP Warnings\u000d\u000aand Notices \u000d\u000aAlong with other strategies to limit information given to attackers, \u000d\u000ait\u2019s a good idea to hide error reports. Error reports can provide valuable information to attackers such as your site\u2019s PHP and WordPress \u000d\u000aversions, the path to your folders, or server information. \u000d\u000aIn development environments, error reports are useful to validate \u000d\u000ayour work and find potential mistakes, however, on a live site, you should deactivate \u000d\u000athese records to hide information such as paths, names, versions, and more. \u000d\u000aTo disable error reports in WordPress, simply add the following lines of code to the \u000d\u000awp-config.php file:\u000d\u000aerror_reporting( 0 );\u000d\u000aini_set( \u2018display_errors\u2019, 0 );\u000d\u000a21. Delete the Readme.html file \u000d\u000aWordPress\u2019 Readme.html file contains important information about \u000d\u000ayour website that hackers may exploit. Yet, it is not a critical file that \u000d\u000ayour website needs and you can delete it from your WordPress root \u000d\u000afolder using FTP or File manager. \u000d\u000aThe Security Optimizer plugin can delete the file automatically. You \u000d\u000acan select this option from your WordPress dashboard > SG Security > Site Security \u000d\u000a> Delete the Default Readme.html.","31 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000a22. Hide Apache and\u000d\u000aPHP Information \u000d\u000aThe last tip on hiding information is to configure the headers sent by \u000d\u000athe servers. These often contain information about the software \u000d\u000ainstalled on the server and the PHP version being executed.\u000d\u000aDepending on the installation, you should hide or limit the information \u000d\u000abeing shared about the web server by adding the following line of \u000d\u000acode to the .htaccess file in the root directory:\u000d\u000aServerSignature Off\u000d\u000aThere are two ways to hide the information about your site\u2019s PHP version that some \u000d\u000aservers send in the HTTP header. First, add the following code to the .htaccess file:\u000d\u000aHeader unset X-Powered-By\u000d\u000aOr use the following directive in the php.ini:\u000d\u000aexpose_php = Off\u000d\u000aNote: Normally you can add this line of code to your active php.ini through the server \u000d\u000aadmin panel, but this may be different depending on your hosting provider.","32 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000a23. Keep Your WordPress Updated \u000d\u000aTo protect your website against known security vulnerabilities, you \u000d\u000ashould use the latest version of the WordPress core software, keep \u000d\u000aany installed plugins updated, and update your themes. \u000d\u000aI prefer to maintain my site manually, although it requires more \u000d\u000aattention and time because it allows me to be aware of the features \u000d\u000aincluded in every update and the reason for them. In terms of the update order, I always \u000d\u000arecommend updating the WordPress core software first and then, without any specific \u000d\u000aorder, updating plugins and themes. \u000d\u000aIf, however, you want the WordPress core to be updated automatically, simply add the \u000d\u000afollowing line of code to your wp-config.php file:\u000d\u000adefine( \u2018WP_AUTO_UPDATE_CORE\u2019, true );\u000d\u000aNote: the automatic update won\u2019t run if you have disabled the WordPress cron. \u000d\u000aYou\u2019ll receive an email to the address used by the platform admin account after every \u000d\u000aupdate. \u000d\u000aUpdating WordPress core is only one part of the equation. Based on a report from \u000d\u000aWPScan, 52% of vulnerabilities found in WordPress installations are due to plugins, \u000d\u000a11% due to themes, and 37% due to the WordPress core software. \u000d\u000aIf you want to update plugins automatically, add the following line of code to the functions.php file of your active theme or in your functionality plugin:\u000d\u000aadd_filter( \u2018auto_update_plugin\u2019, \u2018__return_true\u2019 );\u000d\u000aBefore adding this code, delete all the unused plugins on your site. Simply deactivating \u000d\u000athem is not enough to remove potential vulnerabilities. Delete them! \u000d\u000aAdding the following line of code will automatically update themes:\u000d\u000aadd_filter( \u2018auto_update_theme\u2019, \u2018__return_true\u2019 ); ","33 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aIf you have the SiteGround AutoUpdate Tool enabled, it will automatically update your \u000d\u000aWordPress installations hosted with SiteGround. What is more, before every auto-update, they do a full website backup that you can easily restore, if needed. In this way, \u000d\u000ayou\u2019re always on the latest version and your website is secure. \u000d\u000aLastly, remember that keeping your WordPress site secure is great, but the computer \u000d\u000ayou use should also be protected from malicious software and viruses. Make sure you \u000d\u000ause a reputable antivirus and your operating system is up to date.\u000d\u000a24. Perform Regular\u000d\u000aSecurity Scans\u000d\u000aDespite your best efforts to keep your website intact, the danger of it \u000d\u000agetting infected is always there. Hackers are extremely persistent \u000d\u000aand proactive in finding new, inventive ways to breach publicly \u000d\u000aaccessible websites. \u000d\u000aAfter a website is compromised, there are many ways in which it can \u000d\u000abe exploited. Malware programs can infect visitors and steal sensitive information \u000d\u000afrom their computers, use the website to send large volumes of unsolicited emails, or \u000d\u000atake down the website causing reputational and financial damage to its owner.\u000d\u000aTherefore, you must always stay vigilant and periodically conduct security scans for \u000d\u000amalicious software on your website. There are many online scanners you can use to \u000d\u000aperform periodic manual checks for malware infection. There is also a wide range \u000d\u000aof WordPress plugins that can perform scheduled automatic scans and alert you of \u000d\u000asuspicious scripts and files. \u000d\u000aSiteGround clients can take advantage of the Site Scanner, which is a custom, \u000d\u000ain-house, all-in-one security solution. One of its many advantages is that it works with \u000d\u000aany kind of website application and is not limited to WordPress.\u000d\u000aYou will be relieved from having to do manual checks as it performs daily automatic \u000d\u000ascans for suspicious links on your website and will send an instant email notification \u000d\u000ato your administrative email in case it detects malicious content. In addition, the tool \u000d\u000awill check your domain name against the most popular domain blacklists and inform \u000d\u000ayou if your domain is listed in them.","34 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000aApart from the automated scans, you can perform on-demand scans at any time, \u000d\u000awhich will also scan all website files for suspicious scripts. You can initiate a scan \u000d\u000afrom your website\u2019s Site Tools > Security > Site Scanner by clicking on the button \u000d\u000aStart Scan.\u000d\u000aSite Scanner comes in two versions - Basic and Premium. The Basic plan includes \u000d\u000adaily URL and domain blacklist scans, options for limiting access to the website via \u000d\u000aSSH and FTP, disabling PHP uploads and the execution of PHP scripts. \u000d\u000aThe Premium plan includes all features of the Basic plan and adds advanced \u000d\u000afeatures, further boosting your site security. The daily automatic scans cover \u000d\u000athe website files as well, and the Site Scanner will automatically check any newly \u000d\u000auploaded files to your website. In case a suspicious file is found, it will be placed \u000d\u000ain Quarantine which allows you to review it and decide if you want to release it or \u000d\u000apermanently delete it. \u000d\u000aIf you are interested in this service, read this tutorial on how the SiteGround Site \u000d\u000aScanner protects your website.","35 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000a25. Choose a Trusted\u000d\u000aHosting Company\u000d\u000aAnother important security recommendation is to select a secure \u000d\u000ahosting company for your website. It should be at the top of your \u000d\u000alist of web host criteria. When selecting a hosting company for \u000d\u000ayour WordPress website, be sure they provide a secure platform \u000d\u000aand regularly maintain the security of their infrastructure.\u000d\u000aA few red flags to watch out for, for example, is how often your hosting provider \u000d\u000aof your choice announces updates of their software, how they handle discovered \u000d\u000avulnerabilities in widely-used software on their platform, how quick are they to \u000d\u000aadopt security releases, etc.\u000d\u000aBy choosing a reputable and secure hosting provider, you can significantly reduce \u000d\u000athe risk of data breaches, hacking attempts, and other security issues that can jeopardize your website\u2019s integrity and reputation. Ultimately, making the right hosting \u000d\u000adecision is critical to the success and security of your WordPress project.\u000d\u000a26. Secure Your Webpages\u000d\u000awith CAPTCHA\u000d\u000aMalicious bots could be extremely persistent and hard to deal \u000d\u000awith. Their actions could harm your website in various ways. \u000d\u000aSome bots attack your contact form and as a result litter your \u000d\u000aadministrative email with lots of spam messages. Their attack \u000d\u000acould overload your web server since your website sends an email \u000d\u000afor every new form submission which creates an excessive number of executions. \u000d\u000aOther bots try to log into your dashboard by trying numerous combinations of \u000d\u000acredentials. Apart from the obvious danger of obtaining access to your administrative panel, their login attempts also accumulate a huge number of executions that \u000d\u000amay overload your website.","SECURITY MATTERS: 25+ Tips to Keep 36\u000d\u000aYour WordPress Secure\u000d\u000aThat is why you should consider securing your contacts page and login screen with \u000d\u000aCAPTCHA. It will force a visual challenge for suspicious IP addresses that visit your \u000d\u000apage too frequently. One of the most popular CAPTCHA plugins for WordPress is \u000d\u000areCaptcha that can be implemented on different pages of your website. \u000d\u000aHere, at SiteGround, we\u2019ve also implemented a sophisticated anti-bot system that \u000d\u000aconstantly monitors and analyzes your website traffic. One of its many features is a \u000d\u000aCAPTCHA challenge for IP addresses flagged as suspicious. For more information, \u000d\u000aread this blog post on how SiteGround\u2019s Anti-Bot AI protects your website.\u000d\u000a27. Bonus Tip: Take Post-hack \u000d\u000aActions\u000d\u000aIf you believe that your website was compromised, you need to \u000d\u000atake actions to identify and address the vulnerabilities. These \u000d\u000aactions can easily be achieved using the Security Optimizer \u000d\u000aplugin, and they include:\u000d\u000a\u25cf Reinstalling all free plugins\u000d\u000aIf you choose this option from Security Optimizer plugin > Post-hack Actions > \u000d\u000aReinstall All Free Plugins, the action will reinstall all free plugins you have currently \u000d\u000ainstalled and use the same plugin versions. This will remove any additional code \u000d\u000aadded to them by an attacker.\u000d\u000a\u25cf Forcing password reset\u000d\u000aBy choosing this option from Security Optimizer plugin > Post-hack Actions > \u000d\u000aForce Password Reset, it will instantly log out all logged in users on your website, \u000d\u000aincluding yourself. Once users try to log back in, they will be asked to change their \u000d\u000apasswords. You can use this option if you believe that a user\u2019s password may be \u000d\u000acompromised.","37 SECURITY MATTERS: 25+ Tips to Keep\u000d\u000aYour WordPress Secure\u000d\u000a\u25cf Logging out all users\u000d\u000aYou can choose this option from Security Optimizer plugin > Post-hack Actions > \u000d\u000aLog out all users, and it will log out all currently logged in users without asking them \u000d\u000ato change their passwords. This will prevent any users from performing any more \u000d\u000aactions on your website.","SECURITY MATTERS: 25+ Tips to Keep 38 Your WordPress Secure\u000d\u000aConclusion\u000d\u000aThey say common sense isn\u2019t so common, but in terms of security, it\u2019s your best ally. \u000d\u000aUse strong passwords, delete inactive users, assign the right roles to each user, do not \u000d\u000asave active sessions on public computers, keep the server time updated, only allow \u000d\u000asecure access, and actively monitor your website. \u000d\u000aOf course, there is no such thing as a 100% secure website, but I hope this guide can \u000d\u000ahelp you maintain a safe site for a long time. Use your judgment when applying these \u000d\u000arecommendations and only use the tips you need and which are compatible with your \u000d\u000aproject. Staying on top of the latest news and trends in WordPress and web security \u000d\u000acan help you as well. \u000d\u000aThis guide is based on my experience of over 10 years working with WordPress. The \u000d\u000aknowledge collected and shared in this guide exists largely because of the professionals in the community to whom I am very grateful. These tips were also sourced \u000d\u000afrom a multitude of online resources on WordPress web security, content which is \u000d\u000abeing generated almost daily, so, there\u2019s a good chance by the time you read this guide, \u000d\u000asome tips will already be outdated and others will not be necessary due to WordPress \u000d\u000acore updates.","SECURITY MATTERS: 25+ Tips to Keep 39\u000d\u000aYour WordPress Secure\u000d\u000aAbout the author\u000d\u000aFernando Puente\u000d\u000aFernando is an IT expert, which he considers his passion and his profession, and self-identifies as a food and wine enthusiast. He has been \u000d\u000aworking on computer projects since 1996 using a thousand and one \u000d\u000atechnologies and since 2007 using WordPress for mass media and \u000d\u000aeCommerce sites. He is also specialised in optimising the performance \u000d\u000aof large media websites and eCommerce platforms. After his time at \u000d\u000aSiteGround as an enterprise consultant, he currently works in business \u000d\u000adevelopment for a large company in the WordPress ecosystem. \u000d\u000aFind him on Twitter: @fpuenteonline\u000d\u000a \u000d\u000a \u000d\u000a "]